on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Check DNS Connection
      run: |
        echo "HOST=${{ secrets.SERVER_HOST }}"
        nslookup ${{ secrets.SERVER_HOST }} || true
        ping -c 2 ${{ secrets.SERVER_HOST }} || true

    - name: Check SSH Connection
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
        port: 22
        timeout: 60s
        script: whoami

    - name: Deploy on Server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
        port: 22
        timeout: 60s
        script: |
          cd ~/projects/webapp/Hello_Django

          echo "DJANGO_DEBUG=${{ vars.DJANGO_DEBUG }}" > .env
          echo "ACCESS_TOKEN_LIFETIME=${{ vars.ACCESS_TOKEN_LIFETIME }}" >> .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env

          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB_NAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_DB_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_DB_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_DB_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_DB_PORT }}" >> .env

          git pull origin main
          docker-compose down || true
          docker system prune -f
          docker-compose build --no-cache
          docker-compose up --build -d